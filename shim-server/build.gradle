buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.4.RELEASE")
  }
}

apply plugin: 'java'
apply plugin: 'spring-boot'

//apply plugin: 'maven'
//group = "org.openmhealth.shim"

jar {
  baseName = 'omh-shims'
  version = '0.1.1'
}

springBoot {
  mainClass = "org.openmhealth.shim.Application"
}

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {

  // tag::jetty[]
  compile("org.springframework.boot:spring-boot-starter-web") {
    exclude module: "spring-boot-starter-tomcat"
  }
  compile "org.springframework.boot:spring-boot-starter-jetty"
  // end::jetty[]
  testCompile "org.springframework.boot:spring-boot-starter-test"
  compile "org.springframework.security.oauth:spring-security-oauth:2.0.1.RELEASE"
  compile "org.springframework.security.oauth:spring-security-oauth2:2.0.1.RELEASE"

  compile "joda-time:joda-time:2.4"

  compile "commons-io:commons-io:2.4"
  compile "oauth.signpost:signpost-core:1.2.1.2"
  compile "oauth.signpost:signpost-commonshttp4:1.2.1.2"

  compile "com.microsoft.hsg:hv-jaxb:1.6"
  compile "com.microsoft.hsg:hv-sdk:1.6"

  compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.4.0"
  compile "org.codehaus.woodstox:woodstox-core-asl:4.1.4"
  //todo: find out if this is necessary, it might not be
  //compile "com.fasterxml.jackson.module:jackson-module-jsonSchema:2.3.3"
  compile "com.jayway.jsonpath:json-path:0.9.1"
  compile "com.github.fge:json-schema-validator:2.2.5"
  //testCompile "com.jayway.jsonpath:json-path-assert:0.9.1"

  compile "org.springframework.boot:spring-boot-starter-data-mongodb"

  testCompile("junit:junit")
}


task wrapper(type: Wrapper) {
  gradleVersion = '2.0'
}
